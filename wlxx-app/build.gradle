
plugins {
    id 'com.github.johnrengelman.shadow' version '2.0.4'
}

apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'application'

//buildscript {
//    repositories {
//        jcenter()
//    }
//    dependencies {
//        classpath "com.github.jengelman.gradle.plugins:shadow:2.0.1"
//    }
//}


dependencies {
//    弃用多模块，改用微服务分布式
//    compileOnly(project(':wlxx-common'))
//    compile(project(':wlxx-user'))
    implementation("com.xzg:wlxx-common:0.0.1-SNAPSHOT")
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'

}




// 解决多模块之间依赖，在build时找不到类的问题
//sourceSets {
//    main {
//        java {
//            srcDirs = ['src/main/java','../wlxx-framework/src/main/java']
//        }
//        resources {
//            srcDirs = ['src/main/resources','../wlxx-framework/src/main/resources']
//        }
//    }
//}

bootJar {
    enabled(true)
    manifest {
        attributes 'Main-Class': 'com.xzg.wlxx.utils.CodeGenerator'
    }
}


jar {
//    configurations.runtime.each { println it.path }
//    println "========="
//    configurations.compile.each { println it.path }
//    println "========="
//    from {
//        //添加依懒到打包文件
//        //configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
//        configurations.runtime.collect { zipTree(it) }
//    }
//    String someString = ''
//    configurations.runtime.each {someString = someString + " lib\\"+it.name} //遍历项目的所有依赖的jar包赋值给变量someString
    enabled(true)
    manifest {
        attributes ('Main-Class': 'com.xzg.wlxx.utils.CodeGenerator',"Implementation-Title": "Gradle")
    }
    into('lib') {
        from configurations.runtime
    }
}

task clearJar(type: Delete) {
    delete 'build/libs/lib'
}

task copyJar(type: Copy) {
    from configurations.compile
    into('build/libs/lib')
}

//shadowJar {
//    classifier = ""
//    relocate 'org.apache.ibatis', 'my.org.apache.ibatis'
//    dependencies {
//        include(dependency("org.mybatis:mybatis:3.4.5:withDependencies"))
//    }
//}
shadowJar {
    classifier = null
    manifest {
        attributes ('Main-Class': 'com.xzg.wlxx.utils.CodeGenerator')
    }
}

task makeSdkJar(type:org.gradle.api.tasks.bundling.Jar) {
    baseName 'pluginsdk'
    //只打包org.cmdmac下的org.cmdmac.pluginsdk.impl和org.cmdmac.gamecenter,其他子包不会被打包进去
    from('build/intermediates/classes/com/xzg/wlxx/') {
        include 'pluginsdk/impl'
        include 'gamecenter'
    }
    into('com/xzg/wlxx/')
}

