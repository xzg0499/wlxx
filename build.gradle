
//plugins {
//	id 'org.springframework.boot' version '2.4.5'
//	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
//	id 'java'
//}

// 编译脚本


buildscript {
	ext {
		springBootVersion = "2.4.5"
	}

	// 仓库配置
	repositories {
		maven { url 'https://maven.aliyun.com/repository/central' }
		maven { url 'https://maven.aliyun.com/repository/spring' }
		maven { url 'https://maven.aliyun.com/repository/google' }
		mavenLocal()
		maven { url 'https://repo.spring.io/release' }
		maven { url 'https://repo.spring.io/milestone' }
	}

	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

description = "无聊写写"

allprojects {
	apply plugin: 'java'


	ext {
		mybatisPlusVersion = "3.5.0"
		javaVersion = JavaVersion.VERSION_1_8
		mysqlVersion = "8.0.27"
		lombokVersion = "1.18.22"
		knife4jVersion = "3.0.3"
		hutoolVersion = "5.7.16"
		javafakerVersion = "1.0.2"
		jupiterVersion = "5.8.2"
		fastjsonVersion = "1.2.79"
	}

	group = 'com.xzg'
	version = '0.0.1-SNAPSHOT'
	// 编译环境 JDK1.8
	sourceCompatibility = "${javaVersion}"
	targetCompatibility = "${javaVersion}"

	// 仓库配置
	repositories {
		maven { url 'https://maven.aliyun.com/repository/central' }
		maven { url 'https://maven.aliyun.com/repository/spring' }
		maven { url 'https://maven.aliyun.com/repository/google' }
		mavenLocal()
		maven { url 'https://repo.spring.io/release' }
		maven { url 'https://repo.spring.io/milestone' }
	}
}

subprojects {
	apply plugin: 'org.springframework.boot'
	apply plugin: 'io.spring.dependency-management'

	dependencies {
		implementation 'org.springframework.boot:spring-boot-starter-web'
		testImplementation('org.springframework.boot:spring-boot-starter-test'){
			exclude group:'org.junit.vintage' ,module:'junit-vintage-engine'
		}

		/*mybatis-plus*/
		compile group: 'com.baomidou', name: 'mybatis-plus-boot-starter', version: "${mybatisPlusVersion}"
//		compile group: 'com.baomidou', name: 'mybatis-plus', version: "${mybatisPlusVersion}"
		implementation group: 'mysql', name: 'mysql-connector-java', version: "${mysqlVersion}"

		/*lombok*/
		compileOnly "org.projectlombok:lombok:${lombokVersion}"
		annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
		testCompileOnly "org.projectlombok:lombok:${lombokVersion}"
		testAnnotationProcessor "org.projectlombok:lombok:${lombokVersion}"

		/*knife4j*/
		// https://mvnrepository.com/artifact/com.github.xiaoymin/knife4j-spring-boot-starter
		implementation group: 'com.github.xiaoymin', name: 'knife4j-spring-boot-starter', version: "${knife4jVersion}"

		implementation group: 'cn.hutool', name: 'hutool-all', version: "${hutoolVersion}"

		/*java-faker mock数据*/
		// https://mvnrepository.com/artifact/com.github.javafaker/javafaker
		implementation group: 'com.github.javafaker', name: 'javafaker', version: "${javafakerVersion}"
		/*jupiter*/
		// https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter-api
//		testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: "${jupiterVersion}"
		// https://mvnrepository.com/artifact/junit/junit
//		testImplementation 'junit:junit:4.13.2'
		// https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter-engine
//		testImplementation "org.junit.jupiter:junit-jupiter-engine:${jupiterVersion}"


		// https://mvnrepository.com/artifact/com.alibaba/fastjson
		implementation group: 'com.alibaba', name: 'fastjson', version: "${fastjsonVersion}"

	}

	test {
		useJUnitPlatform()
	}

}