import com.sun.org.apache.bcel.internal.classfile.ModuleMainClass

//plugins {
//	id 'org.springframework.boot' version '2.4.5'
//	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
//	id 'java'
//}

// 编译脚本


buildscript {
	ext {
		springBootVersion = "2.4.5"

//		velocityVersion = "2.3"
//		freemarkerVersion = "2.3.31"
//		ibeetlVersion = "3.9.0.RELEASE"
//		mybatisPlusGeneratorVersion = "3.5.1"
	}

	// 仓库配置
	repositories {
		mavenLocal()
		maven { url 'https://maven.aliyun.com/repository/central' }
		maven { url 'https://maven.aliyun.com/repository/spring' }
		maven { url 'https://maven.aliyun.com/repository/google' }
		mavenCentral()
		maven { url 'https://repo.spring.io/release' }
		maven { url 'https://repo.spring.io/milestone' }
	}

	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")

//		classpath group: 'org.apache.velocity', name: 'velocity-engine-core', version: "${velocityVersion}"
//		classpath group: 'org.freemarker', name: 'freemarker', version: "${freemarkerVersion}"
//		classpath group: 'com.ibeetl', name: 'beetl', version: "${ibeetlVersion}"
//		classpath group: 'com.baomidou', name: 'mybatis-plus-generator', version: "${mybatisPlusGeneratorVersion}"
	}
}

description = "无聊写写"

allprojects {
	apply plugin: 'java'
//	apply plugin: 'maven'
//	apply plugin: 'maven-publish'
//	apply plugin: 'idea'

	ext {
		mybatisPlusVersion = "3.5.0"
		javaVersion = JavaVersion.VERSION_1_8
		mysqlVersion = "8.0.27"
		lombokVersion = "1.18.22"
		knife4jVersion = "3.0.3"
		hutoolVersion = "5.7.16"
		javafakerVersion = "1.0.2"
		jupiterVersion = "5.8.2"
		fastjsonVersion = "1.2.79"

		velocityVersion = "2.3"
		freemarkerVersion = "2.3.31"
		ibeetlVersion = "3.9.0.RELEASE"
		mybatisPlusGeneratorVersion = "3.5.1"
	}

	group = 'com.xzg'
	version = '0.0.1-SNAPSHOT'
	// 编译环境 JDK1.8
	sourceCompatibility = "${javaVersion}"
	targetCompatibility = "${javaVersion}"

	// java编译的时候缺省状态下会因为中文字符而失败
	[compileJava,compileTestJava,javadoc]*.options*.encoding = 'UTF-8'

	tasks.withType(JavaCompile) {
		options.encoding = "UTF-8"
	}

//	uploadArchives{
//		repositories {
//			mavenDeployer {
//				repository(url: uri("../../repo"))
//			}
//		}
//	}

	// 仓库配置
	repositories {
		mavenLocal()
		maven { url 'https://maven.aliyun.com/repository/central' }
		maven { url 'https://maven.aliyun.com/repository/spring' }
		maven { url 'https://maven.aliyun.com/repository/google' }
		mavenCentral()
		maven { url 'https://repo.spring.io/release' }
		maven { url 'https://repo.spring.io/milestone' }
	}

	sourceSets{
		main(){
			java.srcDir("src/main/java")
			resources.srcDir("src/mai/resources")
		}
		test{
			java.srcDir("src/test/java")
		}
	}


//	sourceSets.main.output.classesDir = new File(buildDir, "classes/main")
//	sourceSets.test.output.classesDir = new File(buildDir, "classes/test")
}

subprojects {
	apply plugin: 'org.springframework.boot'
	apply plugin: 'io.spring.dependency-management'

//	FIXME bootJar 跟多模块build指令不兼容
//	bootJar{
//		enabled(true)
//	}


//	jar{
//		enabled(true)
//		manifest {
//			attributes(
//					'Class-Path': ''
//			)
//		}
//	}

	dependencies {
		implementation 'org.springframework.boot:spring-boot-starter-web'
		testImplementation('org.springframework.boot:spring-boot-starter-test'){
			exclude group:'org.junit.vintage' ,module:'junit-vintage-engine'
		}

		/*mybatis-plus*/
		implementation "com.baomidou:mybatis-plus-boot-starter:${mybatisPlusVersion}"
//		compile group: 'com.baomidou', name: 'mybatis-plus', version: "${mybatisPlusVersion}"
		implementation group: 'mysql', name: 'mysql-connector-java', version: "${mysqlVersion}"

		/*lombok*/
		compileOnly "org.projectlombok:lombok:${lombokVersion}"
		annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
		testCompileOnly "org.projectlombok:lombok:${lombokVersion}"
		testAnnotationProcessor "org.projectlombok:lombok:${lombokVersion}"

		/*knife4j*/
		// https://mvnrepository.com/artifact/com.github.xiaoymin/knife4j-spring-boot-starter
		implementation group: 'com.github.xiaoymin', name: 'knife4j-spring-boot-starter', version: "${knife4jVersion}"

		implementation group: 'cn.hutool', name: 'hutool-all', version: "${hutoolVersion}"

		/*java-faker mock数据*/
		// https://mvnrepository.com/artifact/com.github.javafaker/javafaker
		implementation group: 'com.github.javafaker', name: 'javafaker', version: "${javafakerVersion}"
		/*jupiter*/
		// https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter-api
//		testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: "${jupiterVersion}"
		// https://mvnrepository.com/artifact/junit/junit
//		testImplementation 'junit:junit:4.13.2'
		// https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter-engine
//		testImplementation "org.junit.jupiter:junit-jupiter-engine:${jupiterVersion}"


		// https://mvnrepository.com/artifact/com.alibaba/fastjson
		implementation group: 'com.alibaba', name: 'fastjson', version: "${fastjsonVersion}"

		implementation group: 'org.apache.velocity', name: 'velocity-engine-core', version: "${velocityVersion}"
		implementation group: 'org.freemarker', name: 'freemarker', version: "${freemarkerVersion}"
		implementation group: 'com.ibeetl', name: 'beetl', version: "${ibeetlVersion}"
		implementation group: 'com.baomidou', name: 'mybatis-plus-generator', version: "${mybatisPlusGeneratorVersion}"

	}

	test {
		useJUnitPlatform()
	}

}

//project(":wlxx-system:wlxx-system-client"){
//	dependencies {
//		implementation(project(":wlxx-common:wlxx-common-core"))
//	}
//}
//
//project(":wlxx-system:wlxx-system-provider"){
//	dependencies {
//		implementation(project(":wlxx-system:wlxx-system-client"))
//		implementation(project(":wlxx-common:wlxx-common-core"))
//	}
//}