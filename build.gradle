plugins {
	id 'org.springframework.boot' version '2.4.5' apply false
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'  apply false
	id 'java'
}

configure (allprojects){
	apply plugin: 'org.springframework.boot'
	apply plugin: 'io.spring.dependency-management'
	apply plugin: 'java'

	group = 'com.xzg'
	version = '0.0.1-SNAPSHOT'
	sourceCompatibility = '11'

	ext {
		set('springCloudVersion', "2020.0.2")
	}

	configurations {
		compileOnly {
			extendsFrom annotationProcessor
		}
	}

	dependencies {
		/* spring boot*/
		implementation 'org.springframework.cloud:spring-cloud-starter'
		implementation 'org.springframework.boot:spring-boot-starter-web'
		developmentOnly 'org.springframework.boot:spring-boot-devtools'
		testImplementation 'org.springframework.boot:spring-boot-starter-test'
		compileOnly('org.springframework.boot:spring-boot-devtools')
		/* mysql driver*/
		runtimeOnly 'mysql:mysql-connector-java'
		/* lomnbok */
		compileOnly 'org.projectlombok:lombok'
		annotationProcessor 'org.projectlombok:lombok'
		testCompileOnly 'org.projectlombok:lombok'
		testAnnotationProcessor 'org.projectlombok:lombok'
		/* mybatis plus */
		compile group: 'com.baomidou', name: 'mybatis-plus-boot-starter', version: '3.4.1'
		compile group: 'com.baomidou', name: 'mybatis-plus-generator', version: '3.4.1'
		compile group: 'org.apache.velocity', name: 'velocity-engine-core', version: '2.2'
		compile group: 'org.freemarker', name: 'freemarker', version: '2.3.30'
		compile group: 'com.ibeetl', name: 'beetl', version: '3.1.8.RELEASE'
		/* hutool util*/
		compile 'cn.hutool:hutool-all:5.5.6'
		/* swagger api */
		compile 'io.springfox:springfox-swagger2:2.9.2'
		compile 'io.springfox:springfox-swagger-ui:2.9.2'
		/* activiti bps */
//		compile 'org.activiti:activiti-spring-boot-starter-basic:6.0.0'
	}

	dependencyManagement {
		imports {
			mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
		}
	}

	repositories {
		maven {
			name "aliyunmaven"
			url "http://maven.aliyun.com/nexus/content/groups/public/"
		}
		mavenCentral()
	}

	test {
		useJUnitPlatform()
	}

	tasks.withType(JavaCompile) {
		options.encoding = "UTF-8"
	}
}
