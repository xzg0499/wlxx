
buildscript {
	dependencies {
		classpath('com.bmuschko:gradle-docker-plugin:6.7.0')
		classpath("io.spring.gradle:dependency-management-plugin")
	}
}

plugins{
	id 'org.springframework.boot' version '2.4.7'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
}

// 引入外部gradle文件
apply from: './version.gradle'

ext{
	springCloudVersion = 'Hoxton.SR12'
	alibabaCloudVersion = '2.2.8-SNAPSHOT'

	mybatisPlusVersion = "3.5.0"
	javaVersion = JavaVersion.VERSION_1_8
	mysqlVersion = "8.0.27"
	lombokVersion = "1.18.22"
	knife4jVersion = "3.0.3"
	hutoolVersion = "5.7.16"
	javafakerVersion = "1.0.2"
	jupiterVersion = "5.8.2"
	fastjsonVersion = "1.2.79"

	springBootVersion=''

	velocityVersion = "2.3"
	freemarkerVersion = "2.3.31"
	ibeetlVersion = "3.9.0.RELEASE"
	mybatisPlusGeneratorVersion = "3.5.1"
}



group = 'com.xzg'
version = '0.0.1-SNAPSHOT'
// 编译环境 JDK1.8
sourceCompatibility = "${javaVersion}"
targetCompatibility = "${javaVersion}"

// java编译的时候缺省状态下会因为中文字符而失败
[compileJava,compileTestJava,javadoc]*.options*.encoding = 'UTF-8'

tasks.withType(JavaCompile) {
	options.encoding = "UTF-8"
}




allprojects{
	apply plugin: 'java'
	apply plugin: 'org.springframework.boot'
	apply plugin: 'io.spring.dependency-management'


	bootJar{
		enabled(false)
	}

	jar{
		enabled(true)
	}

	dependencyManagement{
		// 引入依赖管理工具
		imports{
			mavenBom("org.springframework.boot:spring-boot-dependencies:2.6.7")
			mavenBom("org.springframework.cloud:spring-cloud-dependencies:2021.0.2")
			mavenBom "org.springframework.cloud:spring-cloud-dependencies:Hoxton.SR8"
			mavenBom('com.alibaba.cloud:spring-cloud-alibaba-dependencies:2021.0.1.0')
//			mavenBom('com.alibaba.cloud:spring-cloud-alibaba-dependencies:2.1.2.RELEASE')
		}
	}

	dependencies {
//		implementation(enforcedPlatform(SpringBootPlugin.BOM_COORDINATES))
//		implementation("com.alibaba.cloud:spring-cloud-alibaba-dependencies:${alibabaCloudVersion}")


		implementation 'org.springframework.boot:spring-boot-starter'
		implementation 'org.springframework.boot:spring-boot-starter-web'
		testImplementation('org.springframework.boot:spring-boot-starter-test'){
			exclude group:'org.junit.vintage' ,module:'junit-vintage-engine'
		}

		/*mybatis-plus*/
		implementation "com.baomidou:mybatis-plus-boot-starter:${mybatisPlusVersion}"
//		implementation group: 'com.baomidou', name: 'mybatis-plus', version: "${mybatisPlusVersion}"
		implementation group: 'mysql', name: 'mysql-connector-java', version: "${mysqlVersion}"

		/*lombok*/
		compileOnly "org.projectlombok:lombok:${lombokVersion}"
		annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
		testCompileOnly "org.projectlombok:lombok:${lombokVersion}"
		testAnnotationProcessor "org.projectlombok:lombok:${lombokVersion}"

		/*knife4j*/
		// https://mvnrepository.com/artifact/com.github.xiaoymin/knife4j-spring-boot-starter
		implementation group: 'com.github.xiaoymin', name: 'knife4j-spring-boot-starter', version: "${knife4jVersion}"

		implementation group: 'cn.hutool', name: 'hutool-all', version: "${hutoolVersion}"

		/*java-faker mock数据*/
		// https://mvnrepository.com/artifact/com.github.javafaker/javafaker
		implementation group: 'com.github.javafaker', name: 'javafaker', version: "${javafakerVersion}"
		/*jupiter*/
		// https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter-api
//		testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: "${jupiterVersion}"
		// https://mvnrepository.com/artifact/junit/junit
//		testImplementation 'junit:junit:4.13.2'
		// https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter-engine
//		testImplementation "org.junit.jupiter:junit-jupiter-engine:${jupiterVersion}"


		// https://mvnrepository.com/artifact/com.alibaba/fastjson
		implementation group: 'com.alibaba', name: 'fastjson', version: "${fastjsonVersion}"

		implementation group: 'org.apache.velocity', name: 'velocity-engine-core', version: "${velocityVersion}"
		implementation group: 'org.freemarker', name: 'freemarker', version: "${freemarkerVersion}"
		implementation group: 'com.ibeetl', name: 'beetl', version: "${ibeetlVersion}"
		implementation group: 'com.baomidou', name: 'mybatis-plus-generator', version: "${mybatisPlusGeneratorVersion}"
	}
	repositories {
		mavenLocal()
		maven { url 'https://maven.aliyun.com/repository/central' }
		maven { url 'https://maven.aliyun.com/repository/spring' }
		maven { url 'https://maven.aliyun.com/repository/google' }
		mavenCentral()
		maven { url 'https://repo.spring.io/release' }
		maven { url 'https://repo.spring.io/milestone' }
	}
}

