description = "系统管理"


//buildscript {
//    ext {
//        velocityVersion = "2.3"
//        freemarkerVersion = "2.3.31"
//        ibeetlVersion = "3.9.0.RELEASE"
//        mybatisPlusGeneratorVersion = "3.5.1"
//    }
//
//    repositories {
//        mavenLocal()
//        maven { url 'https://maven.aliyun.com/repository/central' }
//        maven { url 'https://maven.aliyun.com/repository/spring' }
//        maven { url 'https://maven.aliyun.com/repository/google' }
//        mavenCentral()
//        maven { url 'https://repo.spring.io/release' }
//        maven { url 'https://repo.spring.io/milestone' }
//    }
//
//    dependencies {
//        classpath group: 'org.apache.velocity', name: 'velocity-engine-core', version: "${velocityVersion}"
//        classpath group: 'org.freemarker', name: 'freemarker', version: "${freemarkerVersion}"
//        classpath group: 'com.ibeetl', name: 'beetl', version: "${ibeetlVersion}"
//        classpath group: 'com.baomidou', name: 'mybatis-plus-generator', version: "${mybatisPlusGeneratorVersion}"
//        classpath 'org.yaml:snakeyaml:1.26'
//    }
//}


task mybatisGenerator {
//    def warnings = new ArrayList<String>()
//    def overwrite = true
//    def configurationFile = projectDir.getAbsolutePath() + '/src/main/resources/generatorConfiguration.xml'
//    def configFile = new File(configurationFile)
//    def cp = new ConfigurationParser(warnings)
//    def config = cp.parseConfiguration(configFile)
//    def callback = new DefaultShellCallback(overwrite)
//    def myBatisGenerator = new MyBatisGenerator(config, callback, warnings)
//    myBatisGenerator.generate(null)
//    def app = new org.yaml.snakeyaml.Yaml().loadAll(new File("src/main/resources/application.yml").newInputStream()).first()
//    def config = new Yaml().loadAll(new FileInputStream(new File(projectDir+"src/main/resources/application.yml")));
//    config.forEach(e->{
//        print(e)
//        print("===")
//    })
//    def myBatisGenerator = FastAutoGenerator.create("","","");
}

// dock镜像打包
apply plugin: "com.bmuschko.docker-spring-boot-application"
docker {
    //如果url不指定的话
    // Unix系统默认：unix:///var/run/docker.sock
//    Windows系统默认：tcp://127.0.0.1:2375。
//    url = 'http://10.3.192.39:2375'
//    registryCredentials {
//        url = 'http://10.3.192.39:8777'
//        username = 'admin'
//        password = 'Harbor12345'
//    }
    springBootApplication {
        baseImage = 'openjdk:latest'//指定运行镜像
        ports = [12000]  //暴露的端口
//        images = ["10.3.192.39:8777/hualongxin/${project.group}/${project.name}:${version}"]
        images = ["${project.name}:${version}"]
//        jvmArgs = ['-Dspring.profiles.active=$env', '-Xmx2048m', '-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=8084']
        jvmArgs = ['-Xmx2048m', '-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=8084']
    }
}

//bootJar {
//    enabled(true)
//}

dependencies {
    implementation(project(":wlxx-framework:wlxx-web"))
    implementation(project(":wlxx-services:wlxx-system:wlxx-system-client"))

    /*mockito 测试框架*/
    implementation("org.mockito:mockito-core:${MockitoVersion}")
    implementation("net.bytebuddy:byte-buddy:${ByteBuddyVersion}")
    implementation("net.bytebuddy:byte-buddy-agent:${ByteBuddyVersion}")


    /*mybatis-plus-generator*/
//    implementation group: 'org.apache.velocity', name: 'velocity-engine-core', version: "${velocityVersion}"
//    implementation group: 'org.freemarker', name: 'freemarker', version: "${freemarkerVersion}"
//    implementation group: 'com.ibeetl', name: 'beetl', version: "${ibeetlVersion}"
//    implementation group: 'com.baomidou', name: 'mybatis-plus-generator', version: "${mybatisPlusGeneratorVersion}"
//    implementation("com.alibaba.cloud:spring-cloud-starter-alibaba-nacos-discovery")
//    implementation group: 'org.apache.velocity', name: 'velocity-engine-core', version: "${velocityVersion}"
//    implementation group: 'org.freemarker', name: 'freemarker', version: "${freemarkerVersion}"
//    implementation group: 'com.ibeetl', name: 'beetl', version: "${ibeetlVersion}"
//    implementation group: 'com.baomidou', name: 'mybatis-plus-generator', version: "${mybatisPlusGeneratorVersion}"

}


