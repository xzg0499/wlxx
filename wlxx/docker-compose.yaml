version: "3.0"
services:
  mysql:
    container_name: mysql
    #    nacos正对mysql做了优化，无法直接使用MySQL原版镜像
    #    image: mysql:latest
    image: nacos/nacos-mysql:8.0.16
    env_file:
      - ./mysql/mysql.env
    privileged: true
    volumes:
      - ${DATA_PATH}/mysql:/var/lib/mysql
    #      - ./mysql/my.cnf:/etc/mysql/my.cnf
    #      - ./mysql/conf.d:/etc/mysql/conf.d
    #      - ./data/mysql-files:/var/lib/mysql-files/
    ports:
      - "3306:3306"
    restart: always
  nacos:
    container_name: nacos-server
    image: nacos/nacos-server:${NACOS_VERSION}
    #    environment:
    #      - SPRING_DATASOURCE_PLATFORM=mysql
    env_file:
      - ./nacos/nacos-standlone-mysql.env
    volumes:
      - ${DATA_PATH}/nacos/standalone-logs/:/home/nacos/logs
      - ./nacos/custom.properties:/home/nacos/init.d/custom.properties
    ports:
      - "8848:8848"
      - "9848:9848"
      - "9555:9555"
    depends_on:
      - mysql
    restart: always
  # rabbitmq:
  #   container_name: rabbitmq
  #   image: rabbitmq:3.9-management
  #   ports:
  #     - "5672:5672"
  #     - "15672:15672"
  #   volumes:
  #     - ${DATA_PATH}/rabbitmq:/var/lib/rabbitmq
  redis:
    container_name: redis
    image: redis:latest
    ports:
      - "6379:6379"
      - "3680:3680"
    volumes:
      - ./redis/redis/redis.conf:/etc/redis/redis.conf
      - ${DATA_PATH}/redis/data:/data
    command: /bin/bash -c "redis-server /etc/redis/redis.conf --appendonly yes --requirepass Htan_123redis"
  # #    TODO sentinel
  # sentinel:
  #   container_name: sentiinel
  #   image: bladex/sentinel-dashboard
  #   environment:
  #     - SENTINEL_DOWN_AFTER=5000
  #     - SENTINEL_FAILOVER=5000
  #   ports:
  #     # 默认访问端口
  #     - "9901:8858"
  # seata:
  #   container_name: seata
  #   image: seataio/seata-server
  #   hostname: seata
  #   ports:
  #     - "8091:8091"
  #   environment:
  #     - SEATA_PORT=8091
  #     - STORE_MODE=file
  # nginx:
  #   image: nginx:latest
  #   container_name: nginx
  #   volumes:
  #     - ${DATA_PATH}/nginx:/etc/nginx
  #   ports:
  #     - "80:80"
